/****************************************************************************
** Meta object code from reading C++ file 'tool select widget.hpp'
**
** Created by: The Qt Meta Object Compiler version 67 (Qt 5.13.1)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#include <memory>
#include "/Users/indikernick/Dev/Projects/C++/Animera/src/tool select widget.hpp"
#include <QtCore/qbytearray.h>
#include <QtCore/qmetatype.h>
#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'tool select widget.hpp' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 67
#error "This file was generated using the moc from 5.13.1. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

QT_BEGIN_MOC_NAMESPACE
QT_WARNING_PUSH
QT_WARNING_DISABLE_DEPRECATED
struct qt_meta_stringdata_ToolSelectWidget_t {
    QByteArrayData data[28];
    char stringdata0[300];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_ToolSelectWidget_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_ToolSelectWidget_t qt_meta_stringdata_ToolSelectWidget = {
    {
QT_MOC_LITERAL(0, 0, 16), // "ToolSelectWidget"
QT_MOC_LITERAL(1, 17, 12), // "cellModified"
QT_MOC_LITERAL(2, 30, 0), // ""
QT_MOC_LITERAL(3, 31, 15), // "overlayModified"
QT_MOC_LITERAL(4, 47, 14), // "shouldShowPerm"
QT_MOC_LITERAL(5, 62, 16), // "std::string_view"
QT_MOC_LITERAL(6, 79, 14), // "changingAction"
QT_MOC_LITERAL(7, 94, 13), // "cellRequested"
QT_MOC_LITERAL(8, 108, 10), // "mouseLeave"
QT_MOC_LITERAL(9, 119, 9), // "mouseDown"
QT_MOC_LITERAL(10, 129, 10), // "ButtonType"
QT_MOC_LITERAL(11, 140, 9), // "mouseMove"
QT_MOC_LITERAL(12, 150, 7), // "mouseUp"
QT_MOC_LITERAL(13, 158, 8), // "keyPress"
QT_MOC_LITERAL(14, 167, 7), // "Qt::Key"
QT_MOC_LITERAL(15, 175, 10), // "setOverlay"
QT_MOC_LITERAL(16, 186, 7), // "QImage*"
QT_MOC_LITERAL(17, 194, 7), // "setCell"
QT_MOC_LITERAL(18, 202, 5), // "Cell*"
QT_MOC_LITERAL(19, 208, 9), // "setColors"
QT_MOC_LITERAL(20, 218, 10), // "ToolColors"
QT_MOC_LITERAL(21, 229, 10), // "setPalette"
QT_MOC_LITERAL(22, 240, 12), // "PaletteCSpan"
QT_MOC_LITERAL(23, 253, 10), // "initCanvas"
QT_MOC_LITERAL(24, 264, 6), // "Format"
QT_MOC_LITERAL(25, 271, 10), // "changeTool"
QT_MOC_LITERAL(26, 282, 11), // "ToolWidget*"
QT_MOC_LITERAL(27, 294, 5) // "Tool*"

    },
    "ToolSelectWidget\0cellModified\0\0"
    "overlayModified\0shouldShowPerm\0"
    "std::string_view\0changingAction\0"
    "cellRequested\0mouseLeave\0mouseDown\0"
    "ButtonType\0mouseMove\0mouseUp\0keyPress\0"
    "Qt::Key\0setOverlay\0QImage*\0setCell\0"
    "Cell*\0setColors\0ToolColors\0setPalette\0"
    "PaletteCSpan\0initCanvas\0Format\0"
    "changeTool\0ToolWidget*\0Tool*"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_ToolSelectWidget[] = {

 // content:
       8,       // revision
       0,       // classname
       0,    0, // classinfo
      16,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       5,       // signalCount

 // signals: name, argc, parameters, tag, flags
       1,    0,   94,    2, 0x06 /* Public */,
       3,    0,   95,    2, 0x06 /* Public */,
       4,    1,   96,    2, 0x06 /* Public */,
       6,    0,   99,    2, 0x06 /* Public */,
       7,    0,  100,    2, 0x06 /* Public */,

 // slots: name, argc, parameters, tag, flags
       8,    0,  101,    2, 0x0a /* Public */,
       9,    2,  102,    2, 0x0a /* Public */,
      11,    1,  107,    2, 0x0a /* Public */,
      12,    2,  110,    2, 0x0a /* Public */,
      13,    1,  115,    2, 0x0a /* Public */,
      15,    1,  118,    2, 0x0a /* Public */,
      17,    1,  121,    2, 0x0a /* Public */,
      19,    1,  124,    2, 0x0a /* Public */,
      21,    1,  127,    2, 0x0a /* Public */,
      23,    2,  130,    2, 0x0a /* Public */,
      25,    2,  135,    2, 0x08 /* Private */,

 // signals: parameters
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void, 0x80000000 | 5,    2,
    QMetaType::Void,
    QMetaType::Void,

 // slots: parameters
    QMetaType::Void,
    QMetaType::Void, QMetaType::QPoint, 0x80000000 | 10,    2,    2,
    QMetaType::Void, QMetaType::QPoint,    2,
    QMetaType::Void, QMetaType::QPoint, 0x80000000 | 10,    2,    2,
    QMetaType::Void, 0x80000000 | 14,    2,
    QMetaType::Void, 0x80000000 | 16,    2,
    QMetaType::Void, 0x80000000 | 18,    2,
    QMetaType::Void, 0x80000000 | 20,    2,
    QMetaType::Void, 0x80000000 | 22,    2,
    QMetaType::Void, 0x80000000 | 24, QMetaType::QSize,    2,    2,
    QMetaType::Void, 0x80000000 | 26, 0x80000000 | 27,    2,    2,

       0        // eod
};

void ToolSelectWidget::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        auto *_t = static_cast<ToolSelectWidget *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->cellModified(); break;
        case 1: _t->overlayModified(); break;
        case 2: _t->shouldShowPerm((*reinterpret_cast< std::string_view(*)>(_a[1]))); break;
        case 3: _t->changingAction(); break;
        case 4: _t->cellRequested(); break;
        case 5: _t->mouseLeave(); break;
        case 6: _t->mouseDown((*reinterpret_cast< QPoint(*)>(_a[1])),(*reinterpret_cast< ButtonType(*)>(_a[2]))); break;
        case 7: _t->mouseMove((*reinterpret_cast< QPoint(*)>(_a[1]))); break;
        case 8: _t->mouseUp((*reinterpret_cast< QPoint(*)>(_a[1])),(*reinterpret_cast< ButtonType(*)>(_a[2]))); break;
        case 9: _t->keyPress((*reinterpret_cast< Qt::Key(*)>(_a[1]))); break;
        case 10: _t->setOverlay((*reinterpret_cast< QImage*(*)>(_a[1]))); break;
        case 11: _t->setCell((*reinterpret_cast< Cell*(*)>(_a[1]))); break;
        case 12: _t->setColors((*reinterpret_cast< ToolColors(*)>(_a[1]))); break;
        case 13: _t->setPalette((*reinterpret_cast< PaletteCSpan(*)>(_a[1]))); break;
        case 14: _t->initCanvas((*reinterpret_cast< Format(*)>(_a[1])),(*reinterpret_cast< QSize(*)>(_a[2]))); break;
        case 15: _t->changeTool((*reinterpret_cast< ToolWidget*(*)>(_a[1])),(*reinterpret_cast< Tool*(*)>(_a[2]))); break;
        default: ;
        }
    } else if (_c == QMetaObject::IndexOfMethod) {
        int *result = reinterpret_cast<int *>(_a[0]);
        {
            using _t = void (ToolSelectWidget::*)();
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&ToolSelectWidget::cellModified)) {
                *result = 0;
                return;
            }
        }
        {
            using _t = void (ToolSelectWidget::*)();
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&ToolSelectWidget::overlayModified)) {
                *result = 1;
                return;
            }
        }
        {
            using _t = void (ToolSelectWidget::*)(std::string_view );
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&ToolSelectWidget::shouldShowPerm)) {
                *result = 2;
                return;
            }
        }
        {
            using _t = void (ToolSelectWidget::*)();
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&ToolSelectWidget::changingAction)) {
                *result = 3;
                return;
            }
        }
        {
            using _t = void (ToolSelectWidget::*)();
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&ToolSelectWidget::cellRequested)) {
                *result = 4;
                return;
            }
        }
    }
}

QT_INIT_METAOBJECT const QMetaObject ToolSelectWidget::staticMetaObject = { {
    &QScrollArea::staticMetaObject,
    qt_meta_stringdata_ToolSelectWidget.data,
    qt_meta_data_ToolSelectWidget,
    qt_static_metacall,
    nullptr,
    nullptr
} };


const QMetaObject *ToolSelectWidget::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *ToolSelectWidget::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_ToolSelectWidget.stringdata0))
        return static_cast<void*>(this);
    return QScrollArea::qt_metacast(_clname);
}

int ToolSelectWidget::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QScrollArea::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 16)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 16;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 16)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 16;
    }
    return _id;
}

// SIGNAL 0
void ToolSelectWidget::cellModified()
{
    QMetaObject::activate(this, &staticMetaObject, 0, nullptr);
}

// SIGNAL 1
void ToolSelectWidget::overlayModified()
{
    QMetaObject::activate(this, &staticMetaObject, 1, nullptr);
}

// SIGNAL 2
void ToolSelectWidget::shouldShowPerm(std::string_view _t1)
{
    void *_a[] = { nullptr, const_cast<void*>(reinterpret_cast<const void*>(std::addressof(_t1))) };
    QMetaObject::activate(this, &staticMetaObject, 2, _a);
}

// SIGNAL 3
void ToolSelectWidget::changingAction()
{
    QMetaObject::activate(this, &staticMetaObject, 3, nullptr);
}

// SIGNAL 4
void ToolSelectWidget::cellRequested()
{
    QMetaObject::activate(this, &staticMetaObject, 4, nullptr);
}
QT_WARNING_POP
QT_END_MOC_NAMESPACE

/****************************************************************************
** Meta object code from reading C++ file 'tool select widget.cpp'
**
** Created by: The Qt Meta Object Compiler version 67 (Qt 5.13.1)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#include <memory>
#include <QtCore/qbytearray.h>
#include <QtCore/qmetatype.h>
#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'tool select widget.cpp' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 67
#error "This file was generated using the moc from 5.13.1. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

QT_BEGIN_MOC_NAMESPACE
QT_WARNING_PUSH
QT_WARNING_DISABLE_DEPRECATED
struct qt_meta_stringdata_ToolWidget_t {
    QByteArrayData data[7];
    char stringdata0[66];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_ToolWidget_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_ToolWidget_t qt_meta_stringdata_ToolWidget = {
    {
QT_MOC_LITERAL(0, 0, 10), // "ToolWidget"
QT_MOC_LITERAL(1, 11, 16), // "shouldChangeTool"
QT_MOC_LITERAL(2, 28, 0), // ""
QT_MOC_LITERAL(3, 29, 11), // "ToolWidget*"
QT_MOC_LITERAL(4, 41, 5), // "Tool*"
QT_MOC_LITERAL(5, 47, 10), // "changeTool"
QT_MOC_LITERAL(6, 58, 7) // "checked"

    },
    "ToolWidget\0shouldChangeTool\0\0ToolWidget*\0"
    "Tool*\0changeTool\0checked"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_ToolWidget[] = {

 // content:
       8,       // revision
       0,       // classname
       0,    0, // classinfo
       2,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       1,       // signalCount

 // signals: name, argc, parameters, tag, flags
       1,    2,   24,    2, 0x06 /* Public */,

 // slots: name, argc, parameters, tag, flags
       5,    1,   29,    2, 0x08 /* Private */,

 // signals: parameters
    QMetaType::Void, 0x80000000 | 3, 0x80000000 | 4,    2,    2,

 // slots: parameters
    QMetaType::Void, QMetaType::Bool,    6,

       0        // eod
};

void ToolWidget::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        auto *_t = static_cast<ToolWidget *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->shouldChangeTool((*reinterpret_cast< ToolWidget*(*)>(_a[1])),(*reinterpret_cast< Tool*(*)>(_a[2]))); break;
        case 1: _t->changeTool((*reinterpret_cast< const bool(*)>(_a[1]))); break;
        default: ;
        }
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        switch (_id) {
        default: *reinterpret_cast<int*>(_a[0]) = -1; break;
        case 0:
            switch (*reinterpret_cast<int*>(_a[1])) {
            default: *reinterpret_cast<int*>(_a[0]) = -1; break;
            case 0:
                *reinterpret_cast<int*>(_a[0]) = qRegisterMetaType< ToolWidget* >(); break;
            }
            break;
        }
    } else if (_c == QMetaObject::IndexOfMethod) {
        int *result = reinterpret_cast<int *>(_a[0]);
        {
            using _t = void (ToolWidget::*)(ToolWidget * , Tool * );
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&ToolWidget::shouldChangeTool)) {
                *result = 0;
                return;
            }
        }
    }
}

QT_INIT_METAOBJECT const QMetaObject ToolWidget::staticMetaObject = { {
    &RadioButtonWidget::staticMetaObject,
    qt_meta_stringdata_ToolWidget.data,
    qt_meta_data_ToolWidget,
    qt_static_metacall,
    nullptr,
    nullptr
} };


const QMetaObject *ToolWidget::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *ToolWidget::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_ToolWidget.stringdata0))
        return static_cast<void*>(this);
    return RadioButtonWidget::qt_metacast(_clname);
}

int ToolWidget::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = RadioButtonWidget::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 2)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 2;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 2)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 2;
    }
    return _id;
}

// SIGNAL 0
void ToolWidget::shouldChangeTool(ToolWidget * _t1, Tool * _t2)
{
    void *_a[] = { nullptr, const_cast<void*>(reinterpret_cast<const void*>(std::addressof(_t1))), const_cast<void*>(reinterpret_cast<const void*>(std::addressof(_t2))) };
    QMetaObject::activate(this, &staticMetaObject, 0, _a);
}
QT_WARNING_POP
QT_END_MOC_NAMESPACE
